<UNION과 UNION ALL 함수>
(1) UNION : 각 쿼리의 합을 반환하는 합집합
=> 여러 쿼리문을 합쳐 하나의 쿼리로 만들어주는 방법이다. 중복된 값을 제거하고 보여주기 때문에, 값을 제거하는 연산이 추가로 수행되어 UNION ALL보다 속도가 느리다는 단점이 있다.

(2) UNION ALL : 각 쿼리의 모든 결과를 포함한 합집합
=> UNION과 동일하게 여러 쿼리문을 합쳐서 하나의 쿼리문으로 만들어주는 함수이다. 중복된 값을 모두 보여줌

- 사용 형태
-> 컬럼명이 동일해야 한다. (같지 않을 경우 AS를 이용해서 동일하게 맞춰줘야 한다.)
-> 컬럼별로 데이터 타입이 동일해야 한다.
-> 컬럼의 개수가 동일해야 한다.

EX)
SELECT A AS one, B AS two
FROM TABLE_A
UNION(또는 UNION ALL)
SELECT C AS one, D AS two
FROM TABLE_B;

※ JOIN과 차이점 ※
JOIN : 새로운 열로 결합한다.(수평결합) | UNION : 새로운 행으로 결합한다.(수직결합)

EX) 예로 두 개의 테이블을 구성한다.
<TABLE A>
고객 | 거래량
---------------
A     |    1
---------------
B     |    2

<TABLE B>
고객 | 거래량
----------------
A     | ONE
----------------
B     | TWO
----------------
B     | THREE

<JOIN 결과>
고객	|  거래량  |	거래량_1
--------------------------------
A	|      1     |	ONE
--------------------------------
B	|      2     | TWO
--------------------------------
B	|      3     | THREE
--------------------------------
	=> '거래량_1'이라는 새로운 '열'로 컬럼이 추가된다.

<UNION 결과>
고객	|     거래량
--------------------
A	|	1
--------------------
B	|	2
--------------------
A	|     ONE
--------------------
B	|     TWO
--------------------
B	|    THREE
--------------------
	=> 두 테이블의 데이터가 새로운 '행'으로 추가되었다.