<특수문자 제거2>
이전 특수문자 제거는 input 자리에서 미허용 특수문자를 바로 삭제처리 하는 코드를 구현했다. 
하지만 이번 특수문자 제거는 '완료'버튼을 클릭했을 때, 특수문자 제거 처리를 할 form 태그 내부의 id를 가져와 리스트 형태의 id를 검사하는 코드다.

/* 특수문자 제거 */
	function checkSpecialCharacters() {
        var regex = /[^a-zA-Z0-9가-힣ㄱ-ㅎㅏ-ㅣ\s@&()\\;'"\/\-+~#:㈜ㆍ.,]/g;
		=> regex는 허용 가능한 문자를 선언한 것
        var fieldsToCheck = ["#cmpnyNm", "#cmpnyDetailAdres", "#mfbizNmK", "#mfbizDetailAdres", "#mfbizNmF", "#mfbizAdresF"];
		=> 체크할 필드의 아이디를 리스트화 함
        var invalidField = null;

     	// 모든 필드의 오류 표시 제거
        fieldsToCheck.forEach(function(selector) {
            $(selector).removeClass('error');
        });

     	for (var i = 0; i < fieldsToCheck.length; i++) {
            var field = $(fieldsToCheck[i]);
            if (regex.test(field.val())) {
            	invalidField = field;
            	field.addClass('error'); // 테두리 강조
                break;
            }
        }
		// 오류지점 focus
        if (invalidField) {
            invalidField.focus();
            return false;
        }
        return true;
    }

=====================================================
// 완료 버튼 (클릭 시, 특수문자 검사)
$(".btn_submit").click(function(e) { => '완료'버튼의 id를 가져와 클릭 이벤트를 함
	if (!checkSpecialCharacters()) { => 여기서 위의 특수문자 제거 함수를 돌게 함. 만약 return 값이 false라면 alert창이 뜨게 됨
		alert("입력된 값에 허용되지 않은 특수문자가 포함되어 있습니다.\n허용가능한 특수 문자는 ~ @ # & ( ) - + \\ : ; ' \" / , . ㆍ ㈜ 입니다.");
			e.preventDefault(); // 폼 제출을 막음
	        } else {
	            $("#frm").submit(); => 올바른 값이 수행되어 값 저장
	}
});
=====================================================
1. 이전 특수문자 제거는 oninput을 사용하여 해당 태그마다 부여했지만, 현재는 태그들의 아이디를 받아 사용함
2. 태그에서 바로 삭제되는 것이 아니라 완료버튼을 클릭했을 때, 특수문자 제거 함수를 돌게 된다.
3. 특수문자 제거 함수에서 걸리게 되면 해당 태그에 focus를 잡는다.