SELECT FNM AS 이름, ENTSCH_UNO AS 입교고유번호 FROM TN_STDNT_INFO WHERE NFM = '김도현';
->
조회
FNM = 이름
ENTSCH_UNO = 입교고유번호
FROM 어디서?
테이블 TN_STDNT_INFO에서
WHERE (조건)
FNM(이름) = '김도현';

=====

SELECT ENTSCH_UNO AS 입교고유번호, CNO AS 기수 FROM TN_ENTSCH_INFO WHERE CNO = 327;
->
조회
ENTSCH_UNO = 입교고유번호
CNO = 기수
FROM 어디서?
TN_ENTSCH_INFO 테이블에서
WHERE(조건)
CNO(기수번호) = 327;

=====
JOIN을 사용해서 김도현 학생의 이름과 기수를 출력하는 쿼리
학생 이름 = (테이블)TN_STDNT_INFO, FNM(이름) = '김도현'
기수 = (테이블)TN_ENTSCH_INFO, CNO(기수) 

->
SELECT FNM AS (별칭)이름, CNO AS (별칭)기수 
FROM TN_STDNT_INFO(학생이름, 입교고유번호 테이블) a 
INNER JOIN(교집합 JOIN) TN_ENTSCH_INFO(기수, 입교고유정보번호 테이블) b on a.ENTSCH_UNO  = b.ENTSCH_UNO 
WHERE a.FNM = '김도현'

"JOIN 종류와 왜 사용해야 하는지?"
- INNER JOIN : A와 B의 교집합을 다룰 때 (가장 기본 -> JOIN이라고만 써도 INNER JOIN으로 인식)
SELECT <열 목록>
FROM <첫 번째 테이블>
	INNER JOIN<두 번째 테이블>
	ON <조인 조건>
[WHERE 검색 조건]
 
- OUTER JOIN
(1) LEFT OUTER JOIN: 왼쪽 테이블의 모든 값이 출력되는 JOIN
(2) RIGHT OUTER JOIN: 오른쪽 테이블의 모든 값이 출력되는 JOIN
(3) FULL OUTER JOIN: 왼쪽 오른쪽 테이블의 모든 값이 출력되는 JOIN

- CROSS JOIN: 한쪽 테이블의 모든 행과 다른쪽 테이블의 모든 행을 조인시키는 기능입니다.
-> ★CROSS JOIN 결과의 전체 행 개수는 두 테이블의 각 행의 개수를 곱한 수만큼 된다.
-> SELECT * FROM <첫 번째 테이블> CROSS JOIN <두 번째 테이블>
-> A와 B 테이블 모두 3개의 행이 주어졌을 때, CROSS JOIN의 결과 9가 된다. A행(3) x B행(3) = 9

- SELF JOIN: SELF JOIN은 자기 자신과 JOIN하므로 1개의 테이블을 사용합니다.
SELECT <열 목록>
FROM <테이블> 별칭A
	INNER JOIN <테이블> 별칭 B
[WHERE 검색 조건]